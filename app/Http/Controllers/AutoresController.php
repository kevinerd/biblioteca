<?phpnamespace App\Http\Controllers;use App\Autor;use App\GruposAutores;use DB;use App\Http\Requests\CreateAutoresRequest;use Illuminate\Support\Facades\Storage;use App\Libro;class AutoresController extends Controller{    public function index(){        $autores = DB::table('autores')->get();        Autor::all();        return view('autores.index', compact('autores'));    }    public function create(){        $grupos = DB::table('grupos_autores')->get();        return view('autores.create', compact('grupos'));    }    public function store(CreateAutoresRequest $request){        Autor::create($request->all());        $file = $request->file('thumb');        $name_thumb = $request->file('thumb')->getClientOriginalName();        \Storage::disk('local')->put($name_thumb, \File::get($file));        /*$request->file('thumb')->storeAs('autores', $name_thumb);        dd($file);        Storage::disk('local')->put($file,  \File::get($file));        imagen        if ($request->hasFile('thumb')) {            $path = $request->file('thumb')->store('autores', $name_thumb);            // Es importante guardar el path del archivo, más adelante            // explicaré el por qué.            $autor->file = $path;        }        $request->file('thumb')->store('autores');*/        return redirect()            ->route('autores.index')            ->with('info', 'Autor creado correctamente.');    }    public function show($id){        $autor = Autor::findOrFail($id);        $libros = DB::table('libros')            ->where('libros.idAutor', '=', $id)->get();        Libro::all();        return view('autores.show', compact('autor', 'libros'));    }    public function edit($id){        $autor = Autor::findOrFail($id);        $grupos = DB::table('grupos_autores')->get();        return view('autores.edit', compact('autor', 'grupos'));    }    public function update(CreateAutoresRequest $request, $id){        Autor::findOrFail($id)->update($request->all());        return redirect()->route('autores.index')->with('info', 'Autor modificado correctamente.');    }    public function destroy($id){        Autor::findOrFail($id)->delete();        return redirect()->route('autores.index')->with('info', 'Autor eliminado correctamente.');    }    public function site(){        $autores = DB::table('autores')->get();        Autor::all();        return view('site.autores', compact('autores'));    }    public function siteShow($id){        $autor = DB::table('autores')            ->where('autores.id', '=', $id)->get();        $libros = DB::table('libros')            ->select('libros.*')            ->join('autores', 'libros.idAutor', '=', 'autores.id')            ->where('autores.id', '=', $id)->get();        return view('site.autor', compact('autor', 'libros'));    }}