<?phpnamespace App\Http\Controllers;use App\Autor;use App\GruposAutores;use DB;use App\Http\Requests\CreateAutoresRequest;use Illuminate\Support\Facades\Storage;use App\Libro;class AutoresController extends Controller{    public function __construct(){        $this->middleware('auth')->except('site', 'siteShow');        $this->middleware('admin')->except('site', 'siteShow');    }    public function index(){        $autores = DB::table('autores')->get();        Autor::all();        return view('autores.index', compact('autores'));    }    public function create(){        $grupos = DB::table('grupos_autores')->get();        return view('autores.create', compact('grupos'));    }    public function store(CreateAutoresRequest $request){        Autor::create($request->all());        return redirect()            ->route('autores.index')            ->with('info', 'Autor creado correctamente.');    }    public function show($id){        $autor = Autor::findOrFail($id);        $libros = DB::table('libros')            ->where('libros.id_autor', '=', $id)->get();        Libro::all();        return view('autores.show', compact('autor', 'libros'));    }    public function edit($id){        $autor = Autor::findOrFail($id);        $grupos = DB::table('grupos_autores')->get();        return view('autores.edit', compact('autor', 'grupos'));    }    public function update(CreateAutoresRequest $request, $id){        Autor::findOrFail($id)->update($request->all());        return redirect()->route('autores.index')->with('info', 'Autor modificado correctamente.');    }    public function destroy($id){        Autor::findOrFail($id)->delete();        return redirect()->route('autores.index')->with('info', 'Autor eliminado correctamente.');    }    public function site(){        $autores = DB::table('autores')->get();        Autor::all();        return view('site.autores', compact('autores'));    }    public function siteShow($id){        $autor = DB::table('autores')            ->where('autores.id', '=', $id)->get();        $libros = DB::table('libros')            ->select('libros.*')            ->join('autores', 'libros.id_autor', '=', 'autores.id')            ->where('autores.id', '=', $id)->get();        return view('site.autor', compact('autor', 'libros'));    }}